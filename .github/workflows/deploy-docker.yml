name: deploy-docker
on:
  release:
    types: [published]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3️⃣ Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # 4️⃣ Determine Docker tags
      - name: Determine Docker tags
        id: docker-tags
        run: |
          RELEASE_TAG=${GITHUB_REF#refs/tags/}
          BRANCH=$(jq -r '.release.target_commitish' "$GITHUB_EVENT_PATH")
          echo "release_tag=$RELEASE_TAG" >> $GITHUB_OUTPUT
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT

          # Compute tags
          if [ "$BRANCH" = "main" ]; then
            echo "tags=${RELEASE_TAG},latest" >> $GITHUB_OUTPUT
          else
            echo "tags=${RELEASE_TAG}" >> $GITHUB_OUTPUT
          fi

      # 5️⃣ Debug computed tags
      - name: Debug Docker tags
        run: |
          echo "RELEASE_TAG=${{ steps.docker-tags.outputs.release_tag }}"
          echo "BRANCH=${{ steps.docker-tags.outputs.branch }}"
          echo "TAGS=${{ steps.docker-tags.outputs.tags }}"

      # 6️⃣ Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          # Split tags by comma so Buildx accepts multiple tags
          tags: ${{ join(fromJSON('["' + replace(steps.docker-tags.outputs.tags, ',', '","') + '"]'), '\n') }}
          # This ensures only main branch adds 'latest'
