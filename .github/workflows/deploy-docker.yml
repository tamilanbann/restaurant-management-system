name: deploy-docker
on:
  release:
    types: [published]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Determine Docker tags
        id: docker-tags
        run: |
          RELEASE_TAG=${GITHUB_REF#refs/tags/}
          BRANCH=$(jq -r '.release.target_commitish' "$GITHUB_EVENT_PATH")

          echo "release_tag=$RELEASE_TAG" >> $GITHUB_OUTPUT
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT

          if [ "$BRANCH" = "main" ]; then
            echo "tags=latest,$RELEASE_TAG" >> $GITHUB_OUTPUT
          else
            echo "tags=$RELEASE_TAG" >> $GITHUB_OUTPUT
          fi

      - name: Ensure Docker username secret is set
        run: |
          if [ -z "${{ secrets.DOCKER_HUB_USERNAME }}" ]; then
            echo "::error::DOCKER_HUB_USERNAME secret is not set."
            exit 1
          fi

      - name: Debug Docker tags
        run: |
          echo "RELEASE_TAG=${{ steps.docker-tags.outputs.release_tag }}"
          echo "BRANCH=${{ steps.docker-tags.outputs.branch }}"
          echo "TAGS=${{ steps.docker-tags.outputs.tags }}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:${{ steps.docker-tags.outputs.release_tag }}

          build-args: |
            LATEST_TAG=${{ steps.docker-tags.outputs.branch == 'main' && 'latest' || '' }}

      - name: CI verify docker push permission (test)
        run: |
          docker pull alpine:3.18
          docker tag alpine:3.18 ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:ci-push-test
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:ci-push-test
